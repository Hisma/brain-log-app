// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model for authentication and user management
model User {
  id                Int               @id @default(autoincrement())
  username          String            @unique
  email             String?           @unique
  passwordHash      String
  displayName       String
  createdAt         DateTime          @default(now())
  lastLogin         DateTime?
  timezone          String            @default("America/New_York") // User's timezone for date handling
  theme             String            @default("system") // "light", "dark", or "system"
  
  // RBAC Fields
  role              UserRole          @default(PENDING)
  isActive          Boolean           @default(false)
  registrationToken String?           @unique
  approvedBy        Int?
  approvedAt        DateTime?
  rejectedAt        DateTime?
  rejectionReason   String?
  
  // Enhanced tracking
  lastLoginAt       DateTime?
  failedLoginAttempts Int             @default(0)
  lockedUntil       DateTime?
  
  // Existing relationships
  dailyLogs         DailyLog[]
  weeklyReflections WeeklyReflection[]
  insights          Insight[]
  weeklyInsights    WeeklyInsight[]
  auditLogs         AuditLog[]
  
  // Admin approval relations
  approver          User?             @relation("UserApproval", fields: [approvedBy], references: [id])
  approvedUsers     User[]            @relation("UserApproval")
  
  @@index([role])
  @@index([isActive])
  @@index([registrationToken])
}

enum UserRole {
  PENDING
  USER
  ADMIN
}

// Daily log model with time-based sections
model DailyLog {
  id                       Int      @id @default(autoincrement())
  userId                   Int
  date                     DateTime
  
  // Morning check-in fields (7-9am)
  sleepHours               Float    @default(0)
  sleepQuality             Int      @default(0) // 1-10 scale
  dreams                   String?
  morningMood              Int      @default(0) // 1-10 scale
  physicalStatus           String?
  breakfast                String?  // New field
  morningCompleted         Boolean  @default(false) // New field
  
  // Concerta dose log fields (9-10am)
  medicationTaken          Boolean  @default(false) // Modified field
  medicationTakenAt        DateTime? // Existing field, changed to DateTime
  medicationDose           Float    @default(0) // Existing field
  ateWithinHour            Boolean  @default(false) // Existing field
  firstHourFeeling         String?  // Existing field
  reasonForSkipping        String?  // New field
  medicationCompleted      Boolean  @default(false) // New field
  
  // Mid-day check-in fields (11am-1pm)
  lunch                    String?  // New field
  focusLevel               Int      @default(0) // Existing field
  energyLevel              Int      @default(0) // Existing field
  ruminationLevel          Int      @default(0) // Existing field
  currentActivity          String?  // New field
  distractions             String?  // New field
  hadEmotionalEvent        Boolean  @default(false) // New field to explicitly track if an event occurred
  emotionalEvent           String?  // Renamed from mainTrigger
  copingStrategies         String?  // Changed from responseMethod (String[]) to String
  middayCompleted          Boolean  @default(false) // New field
  
  // Afternoon check-in fields (3-5pm)
  afternoonSnack           String?  // New field
  isCrashing               Boolean  @default(false) // New field
  crashSymptoms            String?  // New field
  anxietyLevel             Int?     // New field
  isFeeling                String?  // New field
  hadTriggeringInteraction Boolean  @default(false) // Existing field
  interactionDetails       String?  // Existing field
  selfWorthTiedToPerformance String? // Existing field
  overextended             String?  // Existing field
  afternoonCompleted       Boolean  @default(false) // New field
  
  // Evening reflection fields (8-10pm)
  dinner                   String?  // New field
  overallMood              Int      @default(0) // Existing field
  sleepiness               Int?     // New field
  medicationEffectiveness  String?  // Existing field
  helpfulFactors           String?  // Existing field
  distractingFactors       String?  // Existing field
  thoughtForTomorrow       String?  // Existing field
  metPhysicalActivityGoals Boolean  @default(false) // New field
  metDietaryGoals          Boolean  @default(false) // New field
  neverFeltIsolated        Boolean  @default(false) // Renamed from excessivelyIsolated
  eveningCompleted         Boolean  @default(false) // New field
  
  // Additional fields
  dayRating                Int?     // 1-10 scale
  accomplishments          String?
  challenges               String?
  gratitude                String?
  improvements             String?
  isComplete               Boolean  @default(false)
  
  // Relationships
  user                     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  insights                 Insight[]
  
  // Indexes
  @@index([userId])
  @@index([date])
  @@unique([userId, date])
}

// Weekly reflection model
model WeeklyReflection {
  id                     Int      @id @default(autoincrement())
  userId                 Int
  weekStartDate          DateTime
  weekEndDate            DateTime
  
  // Calculated fields
  questionedLeavingJob   Boolean  @default(false)
  
  // Reflection fields
  weekRating             Int?     // 1-10 scale
  mentalState            String?
  weekHighlights         String?
  weekChallenges         String?
  lessonsLearned         String?
  nextWeekFocus          String?
  
  // New fields
  gymDaysCount           Int      @default(0) // Range 1-7
  dietRating             Int?     // Range 1-10
  memorableFamilyActivities String?
  
  // Relationships
  user                   User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  weeklyInsights         WeeklyInsight[]
  
  // Indexes
  @@index([userId])
  @@index([weekStartDate])
  @@index([weekEndDate])
  @@unique([userId, weekStartDate, weekEndDate])
}

// AI-generated insights model
model Insight {
  id              Int      @id @default(autoincrement())
  userId          Int
  dailyLogId      Int
  insightText     String   @db.Text
  createdAt       DateTime @default(now())
  
  // Relationships
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  dailyLog        DailyLog @relation(fields: [dailyLogId], references: [id], onDelete: Cascade)
  
  @@index([userId])
  @@index([dailyLogId])
  @@unique([userId, dailyLogId])
}

// Weekly AI-generated insights model
model WeeklyInsight {
  id                  Int              @id @default(autoincrement())
  userId              Int
  weeklyReflectionId  Int
  insightText         String           @db.Text
  createdAt           DateTime         @default(now())
  
  // Relationships
  user                User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  weeklyReflection    WeeklyReflection @relation(fields: [weeklyReflectionId], references: [id], onDelete: Cascade)
  
  @@index([userId])
  @@index([weeklyReflectionId])
  @@unique([userId, weeklyReflectionId])
}

// System configuration
model SystemSettings {
  id                       String  @id @default("system")
  registrationEnabled      Boolean @default(true)
  requireEmailVerification Boolean @default(true)
  adminEmail              String  @default("admin@brainlogapp.com")
  siteName                String  @default("Brain Log App")
  maxFailedLoginAttempts  Int     @default(5)
  lockoutDurationMinutes  Int     @default(15)
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
}

// Comprehensive audit logging
model AuditLog {
  id        String   @id @default(cuid())
  userId    Int
  action    String   // "USER_REGISTERED", "USER_APPROVED", "USER_REJECTED", "ROLE_CHANGED", "LOGIN_FAILED", "ACCOUNT_LOCKED"
  resource  String   // "USER", "SYSTEM", "AUTH", "ADMIN"
  details   Json?    // Additional context and metadata
  ipAddress String?
  userAgent String?
  timestamp DateTime @default(now())
  
  // Relations
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId])
  @@index([action])
  @@index([resource])
  @@index([timestamp])
}

// Email notification queue
model EmailQueue {
  id          String   @id @default(cuid())
  to          String
  subject     String
  template    String   // Template identifier
  variables   Json     // Template variables
  status      String   @default("pending") // "pending", "sent", "failed"
  attempts    Int      @default(0)
  maxAttempts Int      @default(3)
  error       String?
  sentAt      DateTime?
  createdAt   DateTime @default(now())
  
  @@index([status])
  @@index([createdAt])
}
